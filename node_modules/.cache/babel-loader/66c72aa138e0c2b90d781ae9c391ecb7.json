{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\Github\\\\chrono-react\\\\src\\\\Chrono\\\\Chrono.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport PauseImg from \"../Images/pause.svg\";\nimport PlayImg from \"../Images/play.svg\";\nimport ResetImg from \"../Images/reset.svg\";\nimport \"./Chrono.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chrono = () => {\n  _s();\n\n  const [sessionTime, setSessionTime] = useState(1500);\n  const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\n  const [breakTime, setBreakTime] = useState(300);\n  const [breakTimeFixed, setBreakTimeFixed] = useState(300);\n  const [workingChrono, setWorkingChrono] = useState(false);\n  const [state, dispatch] = useReducer(reducer);\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"TICK\":\n        if (sessionTime >= 0) {\n          setSessionTime(sessionTime - 1);\n        } else if (breakTime >= 1) {\n          setBreakTime(breakTime - 1);\n        } else if (breakTime <= 0 && sessionTime <= 0) {\n          setSessionTime(sessionTimeFixed);\n          setBreakTime(breakTimeFixed);\n        }\n\n    }\n  }\n\n  useEffect(() => {\n    let id;\n\n    if (workingChrono) {\n      id = window.setInterval(() => {\n        dispatch({\n          type: \"TICK\"\n        });\n      }, 1000);\n    }\n\n    return () => {\n      window.clearInterval(id);\n    };\n  }, [workingChrono]);\n\n  const playPause = () => {\n    setWorkingChrono(!workingChrono);\n  };\n\n  const resetChrono = () => {\n    setBreakTime(breakTimeFixed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-chrono\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-config\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-btns session\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: sessionTimeFixed / 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-btns break\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: breakTimeFixed / 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: sessionTime >= 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: sessionTime / 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 31\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-controllers\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPause,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: workingChrono ? PauseImg : PlayImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetChrono,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ResetImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chrono, \"731jLVYUorgH6XNjFuy/NHnbrl0=\");\n\n_c = Chrono;\nexport default Chrono;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chrono\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Desktop/Github/chrono-react/src/Chrono/Chrono.js"],"names":["React","useEffect","useReducer","useState","Chrono","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","state","dispatch","reducer","action","type","id","window","setInterval","clearInterval","playPause","resetChrono","PauseImg","PlayImg","ResetImg"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport PauseImg from \"../Images/pause.svg\";\nimport PlayImg from \"../Images/play.svg\";\nimport ResetImg from \"../Images/reset.svg\";\nimport \"./Chrono.css\";\n\nconst Chrono = () => {\n  const [sessionTime, setSessionTime] = useState(1500);\n  const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\n\n  const [breakTime, setBreakTime] = useState(300);\n  const [breakTimeFixed, setBreakTimeFixed] = useState(300);\n\n  const [workingChrono, setWorkingChrono] = useState(false);\n\n  const [state, dispatch] = useReducer(reducer);\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"TICK\":\n        if (sessionTime >= 0) {\n          setSessionTime(sessionTime - 1);\n        } else if (breakTime >= 1) {\n          setBreakTime(breakTime - 1);\n        } else if (breakTime <= 0 && sessionTime <= 0) {\n          setSessionTime(sessionTimeFixed);\n          setBreakTime(breakTimeFixed);\n        }\n    }\n  }\n\n  useEffect(() => {\n    let id;\n\n    if (workingChrono) {\n      id = window.setInterval(() => {\n        dispatch({ type: \"TICK\" });\n      }, 1000);\n    }\n\n    return () => {\n      window.clearInterval(id);\n    };\n  }, [workingChrono]);\n\n  const playPause = () => {\n    setWorkingChrono(!workingChrono);\n  };\n\n  const resetChrono = () => {\n    setBreakTime(breakTimeFixed);\n  };\n\n  return (\n    <div className=\"container-chrono\">\n      <div className=\"container-config\">\n        <div className=\"box-btns session\">\n          <button className=\"minus\">-</button>\n          <span>{sessionTimeFixed / 60}</span>\n          <button className=\"plus\">+</button>\n        </div>\n        <div className=\"box-btns break\">\n          <button className=\"minus\">-</button>\n          <span>{breakTimeFixed / 60}</span>\n          <button className=\"plus\">+</button>\n        </div>\n      </div>\n      <h1>{sessionTime >= 0 ? <span>{sessionTime / 60}</span> : \"\"}</h1>\n      <div className=\"container-controllers\">\n        <button onClick={playPause}>\n          <img src={workingChrono ? PauseImg : PlayImg} />\n        </button>\n        <button onClick={resetChrono}>\n          <img src={ResetImg} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chrono;\n"]},"metadata":{},"sourceType":"module"}